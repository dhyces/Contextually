buildscript {
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
	id 'maven-publish'
	id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

archivesBaseName = "${mod_name}-Forge-${minecraft_version}-${version}"

minecraft {
    mappings channel: "${mapping_id}", version: "${mapping_version}"
    
    if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        project.logger.debug('Forge Access Transformers are enabled for this project.')
    }

    runs {
        configureEach {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                contextually {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
                testmod {
                    source sourceSets.test
                }
            }
        }

        client {
            taskName 'Client'
        }

        server {
            taskName 'Server'
        }

        data {
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
        }

        testdata {
            parent data
            inheritArgs false
            args '--mod', 'testmod', '--all', '--output', file('src/test/generated/resources/'), '--existing', file('src/main/resources/'), '--launchTarget', 'forgedatauserdev', '--assetIndex', '2', '--assetsDir', 'C:\\Users\\pokmo\\.gradle\\caches\\forge_gradle\\assets', '--gameDir', '.', '--fml.forgeVersion', '44.1.2', '--fml.mcVersion', '1.19.3', '--fml.forgeGroup', 'net.minecraftforge', '--fml.mcpVersion', '20221207.122022'
            taskName 'TestData'
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly project(":Common")
}

mixin {
    add sourceSets.main, 'contextually.refmap.json'
    config 'contextually.mixins.json'

    debug.verbose = true
    debug.export = true
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

sourceSets {
    test {
        java {
            srcDirs = [
                    "$rootDir/Forge/src/test/java"
            ]
            compileClasspath += sourceSets.main.compileClasspath
        }
        resources {
            srcDirs = [
                    "$rootDir/Forge/src/test/resources",
                    "$rootDir/Forge/src/test/generated/resources"
            ]
        }
        output.dir("out/test")
    }
}

sourceSets.test.compiledBy(JavaCompile)

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
